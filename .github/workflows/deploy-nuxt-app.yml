on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      app_env:
        required: true
        type: string
    secrets:
      DROPLET_USERNAME:
        required: true
      DROPLET_HOST:
        required: true
      DROPLET_KEY:
        required: true

jobs:
  build-nuxt:
    name: Build nuxt on node and send files to Droplet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0
      - name: Use Node
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 20
      - name: npm install & build
        run: |
          npm ci
          npm run build
          mkdir -p .output/server/db
          cp -r db/migrations .output/server/db/migrations
      - name: Copy built nuxt app to Droplet
        uses: contention/rsync-deployments@v2.0.0
        with:
          USER: ${{ secrets.DROPLET_USERNAME }}
          HOST: ${{ secrets.DROPLET_HOST }}
          DEPLOY_KEY: ${{ secrets.DROPLET_KEY }}
          LOCALPATH: .output/
          REMOTEPATH: /opt/nuxter/${{ inputs.app_name }}/.output.${{ inputs.app_env }}.new
          FLAGS: -avzr --delete
      - name: Replace .output directory with new one and restart docker on Droplet
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_KEY }}
          script: |
            cd /opt/nuxter/${{ inputs.app_name }}
            rm -rf .output.${{ inputs.app_env }}.old
            mv .output.${{ inputs.app_env }} .output.${{ inputs.app_env }}.old
            mv .output.${{ inputs.app_env }}.new .output.${{ inputs.app_env }}
            mv .output.${{ inputs.app_env }}.old/server/db/sqlite.db .output.${{ inputs.app_env }}/server/db/sqlite.db
            git fetch --all
            git checkout ${{ github.ref_name }}
            git pull
            docker compose -f ./nuxter-config/nuxter-base-compose.yml --env-file ./nuxter-config/${{ inputs.app_env }}.env -p ${{ inputs.app_name }}-${{ inputs.app_env }} --project-directory ./ up -d --build
